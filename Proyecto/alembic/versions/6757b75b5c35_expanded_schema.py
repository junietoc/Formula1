"""expanded_schema

Revision ID: 6757b75b5c35
Revises: 001
Create Date: 2025-07-11 14:54:39.297516

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6757b75b5c35'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'maintenance_records',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('bike_id', sa.UUID(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column(
            'performed_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ['bike_id'],
            ['bicycles.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'inventory_reports',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('station_id', sa.UUID(), nullable=True),
        sa.Column('reporter_id', sa.UUID(), nullable=True),
        sa.Column('report_date', sa.Date(), nullable=False),
        sa.Column('available_qty', sa.SmallInteger(), nullable=True),
        sa.Column('workshop_qty', sa.SmallInteger(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ['reporter_id'],
            ['users.id'],
        ),
        sa.ForeignKeyConstraint(
            ['station_id'],
            ['stations.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'messages',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('sender_id', sa.UUID(), nullable=True),
        sa.Column('receiver_id', sa.UUID(), nullable=True),
        sa.Column('subject', sa.String(length=120), nullable=True),
        sa.Column('body', sa.Text(), nullable=True),
        sa.Column(
            'sent_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=True,
        ),
        sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ['receiver_id'],
            ['users.id'],
        ),
        sa.ForeignKeyConstraint(
            ['sender_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'privileges',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=True),
        sa.Column(
            'type',
            sa.Enum('extra_tiempo', 'reserva', 'otro', name='privilegetypeenum'),
            nullable=True,
        ),
        sa.Column('granted_by', sa.UUID(), nullable=True),
        sa.Column(
            'granted_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=True,
        ),
        sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ['granted_by'],
            ['users.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'reservations',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('station_id', sa.UUID(), nullable=True),
        sa.Column('bike_id', sa.UUID(), nullable=True),
        sa.Column('reserved_from', sa.DateTime(timezone=True), nullable=True),
        sa.Column('reserved_until', sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            'status',
            sa.Enum('activa', 'cumplida', 'cancelada', 'expirada', name='reservationstatusenum'),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ['bike_id'],
            ['bicycles.id'],
        ),
        sa.ForeignKeyConstraint(
            ['station_id'],
            ['stations.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'evaluations',
        sa.Column('loan_id', sa.UUID(), nullable=False),
        sa.Column('stars', sa.SmallInteger(), nullable=True),
        sa.Column('comment', sa.Text(), nullable=True),
        sa.Column('evaluator_id', sa.UUID(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ['evaluator_id'],
            ['users.id'],
        ),
        sa.ForeignKeyConstraint(['loan_id'], ['loans.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('loan_id'),
    )
    op.create_table(
        'incidents',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('loan_id', sa.UUID(), nullable=True),
        sa.Column('bike_id', sa.UUID(), nullable=True),
        sa.Column('reporter_id', sa.UUID(), nullable=True),
        sa.Column(
            'type',
            sa.Enum('accidente', 'deterioro', 'uso_indebido', 'otro', name='incidenttypeenum'),
            nullable=True,
        ),
        sa.Column('severity', sa.SmallInteger(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('(CURRENT_TIMESTAMP)'),
            nullable=True,
        ),
        sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('resolution_notes', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ['bike_id'],
            ['bicycles.id'],
        ),
        sa.ForeignKeyConstraint(
            ['loan_id'],
            ['loans.id'],
        ),
        sa.ForeignKeyConstraint(
            ['reporter_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index('ix_incidents_bike_id', 'incidents', ['bike_id'], unique=False)
    op.create_table(
        'sanctions',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=True),
        sa.Column('incident_id', sa.UUID(), nullable=True),
        sa.Column('operator_id', sa.UUID(), nullable=True),
        sa.Column('start_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('end_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            'status',
            sa.Enum('activa', 'expirada', 'apelada', name='sanctionstatusenum'),
            nullable=True,
        ),
        sa.Column('appeal_text', sa.Text(), nullable=True),
        sa.Column('appeal_response', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ['incident_id'],
            ['incidents.id'],
        ),
        sa.ForeignKeyConstraint(
            ['operator_id'],
            ['users.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index('ix_sanctions_user_id', 'sanctions', ['user_id'], unique=False)
    op.add_column('bicycles', sa.Column('current_station_id', sa.UUID(), nullable=True))
    op.add_column('bicycles', sa.Column('last_service_at', sa.Date(), nullable=True))
    # SQLite cannot add a column with non-constant DEFAULT. Add the column nullable without default.
    op.add_column('bicycles', sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column(
        'bicycles', 'id', existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
    )
    op.create_index(
        'ix_bicycles_current_station_id', 'bicycles', ['current_station_id'], unique=False
    )
    op.create_index('ix_bicycles_status', 'bicycles', ['status'], unique=False)
    op.create_foreign_key(None, 'bicycles', 'stations', ['current_station_id'], ['id'])
    op.add_column('loans', sa.Column('operator_out_id', sa.UUID(), nullable=True))
    op.add_column('loans', sa.Column('operator_in_id', sa.UUID(), nullable=True))
    op.add_column('loans', sa.Column('duration_min', sa.Integer(), nullable=True))
    op.alter_column(
        'loans', 'id', existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
    )
    op.alter_column(
        'loans', 'user_id', existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
    )
    op.alter_column(
        'loans', 'bike_id', existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
    )
    op.alter_column(
        'loans',
        'station_out_id',
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        'loans',
        'station_in_id',
        existing_type=sa.NUMERIC(),
        type_=sa.UUID(),
        existing_nullable=True,
    )
    op.create_index('ix_loans_bike_id', 'loans', ['bike_id'], unique=False)
    op.create_index('ix_loans_status', 'loans', ['status'], unique=False)
    op.create_index('ix_loans_user_id', 'loans', ['user_id'], unique=False)
    op.create_foreign_key(None, 'loans', 'users', ['operator_in_id'], ['id'])
    op.create_foreign_key(None, 'loans', 'users', ['operator_out_id'], ['id'])
    op.add_column('stations', sa.Column('geom', sa.Text(), nullable=True))
    op.add_column('stations', sa.Column('capacity', sa.SmallInteger(), nullable=True))
    op.add_column('stations', sa.Column('reserved_bicycles', sa.SmallInteger(), nullable=True))
    op.add_column('stations', sa.Column('active', sa.Boolean(), nullable=True))
    op.alter_column(
        'stations', 'id', existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
    )
    op.add_column(
        'users',
        sa.Column(
            'privilege',
            sa.Enum('extra_tiempo', 'reserva', 'otro', name='privilegetypeenum'),
            nullable=True,
        ),
    )
    op.add_column('users', sa.Column('favorite_bike_id', sa.UUID(), nullable=True))
    op.alter_column(
        'users', 'id', existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
    )
    op.create_foreign_key(None, 'users', 'bicycles', ['favorite_bike_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.alter_column(
        'users', 'id', existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
    )
    op.drop_column('users', 'favorite_bike_id')
    op.drop_column('users', 'privilege')
    op.alter_column(
        'stations', 'id', existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
    )
    op.drop_column('stations', 'active')
    op.drop_column('stations', 'reserved_bicycles')
    op.drop_column('stations', 'capacity')
    op.drop_column('stations', 'geom')
    op.drop_constraint(None, 'loans', type_='foreignkey')
    op.drop_constraint(None, 'loans', type_='foreignkey')
    op.drop_index('ix_loans_user_id', table_name='loans')
    op.drop_index('ix_loans_status', table_name='loans')
    op.drop_index('ix_loans_bike_id', table_name='loans')
    op.alter_column(
        'loans',
        'station_in_id',
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.alter_column(
        'loans',
        'station_out_id',
        existing_type=sa.UUID(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        'loans', 'bike_id', existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
    )
    op.alter_column(
        'loans', 'user_id', existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
    )
    op.alter_column(
        'loans', 'id', existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
    )
    op.drop_column('loans', 'duration_min')
    op.drop_column('loans', 'operator_in_id')
    op.drop_column('loans', 'operator_out_id')
    op.drop_constraint(None, 'bicycles', type_='foreignkey')
    op.drop_index('ix_bicycles_status', table_name='bicycles')
    op.drop_index('ix_bicycles_current_station_id', table_name='bicycles')
    op.alter_column(
        'bicycles', 'id', existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
    )
    op.drop_column('bicycles', 'created_at')
    op.drop_column('bicycles', 'last_service_at')
    op.drop_column('bicycles', 'current_station_id')
    op.drop_index('ix_sanctions_user_id', table_name='sanctions')
    op.drop_table('sanctions')
    op.drop_index('ix_incidents_bike_id', table_name='incidents')
    op.drop_table('incidents')
    op.drop_table('evaluations')
    op.drop_table('reservations')
    op.drop_table('privileges')
    op.drop_table('messages')
    op.drop_table('inventory_reports')
    op.drop_table('maintenance_records')
    # ### end Alembic commands ###
